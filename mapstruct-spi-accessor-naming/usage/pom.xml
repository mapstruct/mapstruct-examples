<?xml version="1.0" encoding="UTF-8"?>
<!--

 Copyright MapStruct Authors.

 Licensed under the Apache License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.mapstruct.examples.spi</groupId>
        <artifactId>accessornaming-parent</artifactId>
        <version>1.0.0</version>
    </parent>

    <artifactId>accessornaming-usage</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <dependencies>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                        <path>
                            <!-- Add your SPI implementation. -->
                            <groupId>org.mapstruct.examples.spi</groupId>
                            <artifactId>accessornaming-spi-impl</artifactId>
                            <version>1.0.0</version>
                            <!--
                             In real life, this should be a fixed version from a different
                            reactor project and not be part of the same multi-module project.
                             Maven wouldn't be able to consider that in the build-order calculation
                            and might pull in the spi-impl from a previous build (especially
                            tricky in multi-threaded builds).
                             For Eclipse, there would be similar problems, as it can't reference
                            build artifacts of workspace projects in the processor classpath but
                            only jar-files (in this case from the local M2-repo cache).
                            -->
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
